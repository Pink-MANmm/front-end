1.什么是计算属性
计算属性本质上就是一个function函数，它可以实时监听data中数据的变化，并return一个计算后的新值，
供组件渲染DOM时使用。

2.如何声明计算属性
计算属性需要以function函数的形式声明到组件的computed选项中，示例代码如下：
<input type="text" v-model.number="count" />
<p>{{ count }} 乘以2的值为：{{ plus }}</p>

data(){
    return {
        count:1
    }
}
computed:{
    plus(){//计算属性：监听data中count值的变化，自动计算出count*2之后的新值
        return this.count*2
    }
}

3.计算属性的使用注意点
①计算属性必须定义在computed节点中
②计算属性必须是一个function函数
③计算属性必须有返回值
④计算属性必须当作普通属性使用

4.计算属性vs方法
相对于方法来说，计算属性会缓存计算的结果，只有计算属性的依赖项发生变化时，才会重新进行运算。因此，计算属性的性能更好：
computed:{
    plus(){//计算属性的计算结果会被缓存，性能好
        console.log('计算属性被执行了')
        return this.count*2
    }
},
methods:{
    plus(){//方法的计算结果无法被缓存，性能低
        console.log('方法被执行了')
        return this.count*2
    }
}