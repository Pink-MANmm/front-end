1.什么是动态组件
动态组件指的是动态切换组件的显示与隐藏

2.如何实现动态组件渲染
vue提供了一个内置的<component>组件，专门用来实现动态组件的渲染。示例代码如下：
data(){
    //1.当前要渲染的组件名称
    return {comName:'Left'}
}

<!-- 2.通过is属性，动态指定要渲染的组件 -->
<component :is="comName"></component>

<!-- 3.点击按钮，动态切换组件的名称 -->
<button @click="comName = 'Left'">展示Left组件</button>
<button @click="comName = 'Right'">展示Right组件</button>

3.使用keep-alive保持状态（防止组件切换后销毁组件）
默认情况下，切换动态组建时无法保持组件的状态。此时可以使用vue内置的<keep-alive>组件保持动态组件的状态。示例代码如下：
<!-- keep-alive可以把内部的组件进行缓存，而不是销毁组件 -->
<keep-alive>
    <component :is="comName"></component>
</keep-alive>

4.keep-alive对应的生命周期函数（两个生命周期函数只有在使用keep-alive时才可用）
当组件被缓存时，会自动触发组件的deactivated生命周期函数
当组件被激活时，会自动触发组件的activated生命周期函数
//当组件第一次被创建的时候，既会执行created生命周期，也会执行activated生命周期
//当然，当组件被激活的时候，只会触发activated生命周期，不再触发created。因为组件没有被重新创建
activated(){
    console.log('组件被激活了，activated')
}，
deactivated(){
    console.log('组件被缓存了，deactivated')
}

5.keep-alive的include属性
include属性用来指定：只有名称匹配的组件会被缓存。多个组件名之间使用英文的逗号分隔：
<keep-alive include="Left,Right">
    <component :is="comName"></component>
</keep-alive>

或者，通过exclude属性指定哪些组件不需要被缓存，但是，不要同时使用include和exclude这两个属性
<keep-alive exclude="Right">
    <component :is="comName"></component>
</keep-alive>

6.组件注册名称和组件声明时name的区别
①App.vue
//如果在"声明组件"的时候，没有为组件指定name名称，则组件的名称默认就是"注册时候的名称"
components:{
    Left,
    Right
}
②Right.vue
export default{
    //当提供了name属性之后，组件的名称，就是name属性的值
    name:"MyRight"
}

对比：
*组件的"注册名称"的主要应用场景是：以标签的形式，把注册好的组件，渲染和使用到页面结构之中
*组件声明时候的"name"名称的主要应用场景：结合<keep-alive>标签实现组件缓存功能；以及在调试工具中看到组件的name名称
