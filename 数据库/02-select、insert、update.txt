1.语法
SELECT语句用于从表中查询数据。执行的结果被存储在一个结果表中（成为结果集）。语法格式如下：
--这是注释
--从FROM指定的【表中】，查询出【所有的】数据。*表示【所有列】
SELECT * FROM 表名称

--从FROM指定的【表中】，查询出指定 列名称（字段） 的数据。
SELECT 列名称 FROM 表名称
--注意：SQL语句中的关键字对大小写不敏感。SELECT等效于select，FROM等效于from。

2.SELECT*示例
我们希望从users表中选取所有的列，可以使用符号*取代列的名称，示例如下：
--注意：星号*是选取所有列的快捷方式
SELECT * FROM users

3.SELECT列名称示例
如需获取名为“username”和“password”的列的内容（从名为“users”的数据库表），请使用下面的SELECT语句：
--注意：多个列之间，使用英文逗号进行分隔
SELECT username,password FROM users

4.INSERT INTO语句
INSERT INTO语句用于向数据表中插入新的数据行，语法格式如下：
--语法解读：向指定的表中，插入如下激烈数据，列的值通过values一一指定
--注意：列和值要一一对应，多个列和多个值之间，使用英文的逗号分隔
INSERT INTO table_name（列1，列2,...）VALUES（值1，值2,...）

5.INSERT INTO示例
向users表中，插入一条username为tony stark，password为098123的用户数据，示例如下：
INSERT INTO users (username,password) VALUES ('tony stark','098123')

6.UPDATE语句
Update语句用于修改表中的数据。语法格式如下：
--语法解读：
--1.用UPDATE指定要更新那个表中的数据
--2.用SET指定列对应的新值
--3.用WHERE指定更新的条件
UPDATE 表名称 SET 列名称 = 新值 WHERE 列名称 = 某值

7.UPDATE 示例
把users表中id为4的用户密码，更新为888888.示例如下：
UPDATE users SET password='888888' WHERE id=4
把users表中id为2的用户密码和用户状态，分别更新为admin123和1.示例如下：
--多个被更新的列之间，使用英文的逗号进行分隔
--WHERE 后面跟着的是更新的条件
--注意：初学者经常忘记提供更新的WHERE条件，
--      这样会导致整张表的数据都被更新，一定要慎重！
UPDATE users SET password='admin123',status=1 WHERE id=2

8.DELETE语句
DELETE语句用于删除表中的行。语法格式如下：
--语法解读:
--从指定的表中，根据WHERE条件，删除对应的数据行
DELETE FROM 表名称 WHERE 列名称 = 值

8.DELETE示例
从users表中，删除id为4的用户，示例如下：
--注意：对初学者来说，经常忘记提供WHERE条件，
--     从而导致误删整张表的数据！一定要慎重！
DELETE FROM users WHERE id=4

