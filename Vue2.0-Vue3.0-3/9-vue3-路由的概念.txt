1.什么是路由
路由（英文：router）就是对应关系。路由分为两大类：
①后端路由
②前端路由

2.回顾：后端路由
后端路由指的是：请求方式、请求地址与function处理函数之间的对应关系。在node.js中，express路由的基本用法如下：
const express=require('express')
const router=express.Router()

router.get('/userlist',function(req,res){ /*路由的处理函数*/ })
router.post('/adduser',function(req,res){ /*路由的处理函数*/ })

module.exports = router

3.SPA与前端路由
SPA指的是一个web网站只有唯一的一个HTML页面，所有组件的展示与切换都在这唯一的一个页面内完成。
此时，不同组件之间的切换需要通过前端路由来实现。

结论：在SPA项目中，不同功能之间的切换，要依赖于前端路由来完成

4.什么是前端路由
通俗易懂的概念：Hash地址与组件之间的对应关系

5.前端路由的工作方式
①用户点击了页面上的路由连接
②导致了URL地址栏中的Hash值发生了变化
③前端路由监听到了Hash地址的变化
④前端路由把当前Hash地址对应的组件渲染到浏览器中

结论：前端路由，指的是Hash地址与组件之间的对应关系

6.实现简易的前端路由
步骤1：导入并注册MyHome、MyMovie、MyAbout三个组件。示例代码如下：
import MyHome from './components/MyHome.vue'
import MyMovie from './components/MyMovie.vue'
import MyAbout from './components/MyAbout.vue'

export default {
    components:{
        MyHome,
        MyMovie,
        MyAbout
    }
}

步骤2：通过<components>标签的is属性，动态切换要显示的组件。示例代码如下：
<template>
    <h1>App组件</h1>

    <component :is="comName"></component>
</template>

export default {
    data(){
        return {
            comName:'my-home',//要展示的组件的名称
        }
    }
}

步骤3：在组件的结构中声明如下3个<a>链接，通过点击不同的<a>链接，切换浏览器地址栏中的Hash值：
<a href="#/home">Home</a>&nbsp;
<a href="#/movie">Movie</a>&nbsp;
<a href="#/about">About</a>

步骤4：在created生命周期函数中监听浏览器地址栏中Hash地址的变化，动态切换要展示的组件的名称：
created(){
    window.onhashchange=()=>{
        switch(location.hash){
            case '#/home':
                this.comName = 'my-home'
                break
            case '#/movie':
                this.comName = 'my-movie'
                break
            case '#/about':
                this.comName = 'my-about'
                break
        }
    }
}